[{"title":"angular 設定檔介紹","url":"/2018/05/04/angular-config/","content":"\nkarma.conf.js  --> 當需要用到karma單元測試工具的時候可能會用到\npackage.json  --> 目前專案npm的設定檔，最重要的為script區段是經常會用到的命令，也可修改不同的命令\n```bash\n\"scripts\": {\n\"ng\": \"ng\",\n\"start\": \"ng serve\",\n\"build\": \"ng build --prod\",\n\"test\": \"ng test\",\n\"lint\": \"ng lint\",\n\"e2e\": \"ng e2e\"\n},\n```\n\nprotractor.conf.js --> 則是我們在angular裡面實作end to end (e2e) testing的時候會需要用到的設定檔\ntsconfig.json --> typescript 的相關設定存放的地方，通常不需要修改\ntslint.json --> 另外一個為tslint的工具，用來定義當你使用tslint工具檢查程式碼品質的時候，所有檢查的規則都定義在這個檔案裡面\nnode_module --> 透過npm安裝好的套件都在這個目錄下，通常不動\ne2e --> 都是使用typescript寫成的\nsrc --> 所有angular的主要程式都放在這個資料夾\n\n<hr>\n\nmain.ts --> angular 開發javascript的主要檔案\napp.component.spec.ts / test.ts --> 用來單元測試的定義檔，用來定義如何測試component檔\npolyfiles.ts --> 使用舊版的瀏覽器時可將相對的註解打開，即可自動import進去\ntypings.d.ts --> typescript會用到的定義檔，用來定義那些額外的typescript型別定義，例: 想整合jquery到                            angular網站裡，便須修改此設定檔\n\n```bash\ndeclare var $:any; // 定義會用到的全域變數(jquery)\n```","tags":["angular"]},{"title":"建立 Angular 開發環境","url":"/2018/05/03/angular-enviroment/","content":"\nwindows平台套件 -->[chocolatey](https://chocolatey.org/install)\n<b><u>使用cmd安裝的時候要使用系統管理員執行，否則會出錯</u></b>\n\n此軟件可以一次性安裝需要軟件\n``` bash\nchoco install -y GoogleChrome git nodejs visualstudiocode notepadplusplus\n```\n\n查看版本是否安裝成功\n``` bash\ngit version\nnode -v\ncode -v\nnpm -v\n```\n\n安裝angulur CLI\n``` bash\nnpm i -g @angular/cli\nng -v 查看是否安裝成功\n```\n\n### vscode安裝擴充套件 -->  <b><u>angular extension pack 保哥</u></b>\n","tags":["angular"]},{"title":"暑期實習一些好文和參考練習","url":"/2017/08/29/link/","content":"## IIS - ASP.NET 網站基本優化設定\n\n[網址](https://blog.johnwu.cc/article/iis-optimized-setting.html)\n\n## 拖曳圖片上傳\n[網址](https://codepen.io/netsi1964/pen/IoJbg)\n\n## MSDN百萬電子書大放送\n[網址](https://blogs.msdn.microsoft.com/mssmallbiz/2017/07/11/largest-free-microsoft-ebook-giveaway-im-giving-away-millions-of-free-microsoft-ebooks-again-including-windows-10-office-365-office-2016-power-bi-azure-windows-8-1-office-2013-sharepo/)","tags":["暑期實習"]},{"title":"資料呈現 gridview","url":"/2017/07/28/gridview/","content":"## 新建Datatable存資料\n\n``` bash\nDim dt As DataTable = New DataTable\n\n            dt.Columns.Add(\"F_SGR_NAME\", GetType(System.String))\n\n            dt.Columns.Add(\"GH_ATOLSM\", GetType(System.String))\n\n            dt.Columns.Add(\"F_ADDR\", GetType(System.String))\n\n            dt.Columns.Add(\"HP_DGM\", GetType(System.String))\n\n            dt.Columns.Add(\"HP_PM\", GetType(System.String))\n\n            dt.Columns.Add(\"Sum\", GetType(System.String))\n\n    ViewState(\"datatable\") = dt  //將DataTable存到ViewState\n```\n\n## 讀回ViewState 中的DataTable資料\n```bash\n  Dim dt As DataTable = CType(ViewState(\"datatable\"), DataTable)\n```\n\n## 創建新的DataRow，將資料寫入，並新增到DataTable \n```bash\n         Dim drow As DataRow\n\n                    drow = dt.NewRow()\n\n                    drow(0) = ddl_company.SelectedItem.Text\n\n                    drow(1) = ddl_address.SelectedValue\n\n                    drow(2) = ddl_address.SelectedItem.Text\n\n                    drow(3) = ddl_product.SelectedValue\n\n                    drow(4) = ddl_product.SelectedItem.Text\n\n                    drow(5) = GetValue(tb_sum.Text)\n\n                    dt.Rows.Add(drow)\n\n          ViewState(\"datatable\") = dt\n```\n\n## 將DataTable與GridView做資料繫節，顯示資料\n``` bash\nGridView1.DataSource = dt\n\n      GridView1.DataBind()\n```","tags":["-Asp.net"]},{"title":"C# AD撈法","url":"/2017/07/23/AD/","content":"<hr>\n\n### 放在全域，比較不會改變的東西\n\n``` bash\nstatic string[] strParameters = new string[] { \"網域\" };\n\nstatic string adPath = strParameters[0];\n\nstring LoginUser = HttpContext.Current.Request.ServerVariables[\"LOGON_USER\"].Split('\\\\')[1];//這台電腦使用者的登入帳號\n\nstatic DirectoryEntry ds = new DirectoryEntry(adPath);\n\nDirectorySearcher search = new DirectorySearcher(ds);\n```\n\n### 可改變的東西\n\n``` bash\nsearch.Filter = \"SAMAccountName=\" + LoginUser;//下條件去搜尋，這是用使用者帳號去搜尋。SAMAccountName也可以替換成其他項目，換成wwwhomepage就改成用員編搜尋\n\nSearchResult result = search.FindOne();//用上面你設定的條件去搜尋\n\nresult.Properties[\"wwwhomepage\"][0].ToString();//搜尋員工編號，wwwhomepage在AD帳戶管理裡面是員工編號\n\nresult.Properties[\"name\"][0].ToString().Split('-')[1];//搜尋員工姓名，name在AD帳戶管理裡面是部門+姓名，這個搜出來會是「資訊-XXX」，所以用Split去分割，取後面姓名\n\n其他資訊以此類推，只要換掉你要搜尋的項目\n\ne.g. : telephonenumber分機號碼、department部門\n```\n","tags":["C#"]},{"title":"base64編碼","url":"/2017/07/21/base64/","content":"<hr>\n一種編碼方式，可以將檔案轉成這種編碼，然後存進資料庫。\n\n``` bash\nstring fileExtension = root.fileExtension; //副檔名\n\nbyte[] fileBuffer = Convert.FromBase64String(root.fileBuffer);//base64編碼，原本是一串字串，轉換成byte陣列\n\nstring filepath = path1 + fileName + fileExtension;//妳要存的檔案名稱\n\nFileStream fs = new FileStream(filepath, FileMode.Create, FileAccess.ReadWrite, FileShare.ReadWrite);//NEW一個檔案記憶體\n\nfs.Write(fileBuffer, 0, fileBuffer.Length);//將byte陣列資料寫入 fs記憶體\n\nfs.Flush();//清除緩衝，將緩衝資料解入檔案\n\nfs.Close();//關閉\n```","tags":["暑期實習"]},{"title":"網頁設定","url":"/2017/07/12/website-setting/","content":"<hr>\n\n### 相容性設定\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n這個是網頁的相容設定，可以加在head裡，讓IE預設的文件模式是EDGE。IE開了版面會跑掉要看個人電腦的預設。\n可以用IE按F12去看主控台訊息，幾乎都會把錯的地方顯示出來，可以每個頁面都去看看有沒有哪邊錯。\n如果要用HTML5的話，要把這個改掉<html xmlns=http://www.w3.org/1999/xhtml>，VS一開始加入的網頁都不會是HTML5的。\n套CSS的時候，要選有支援到IE9的，CSS3有些屬性IE9不能用，要去W3School看一下支援到哪。\n\n### IIS錯誤\n%windir%\\Microsoft.NET\\Framework\\v4.0.30319\\aspnet_regiis.exe -i ","tags":["暑期實習"]},{"title":"C#發送EMAIL","url":"/2017/07/10/C-email/","content":"<hr>\n\n``` bash\nMailMessage mail = new MailMessage();\n\nmail.From = new MailAddress(\"要拿來發送的mail\");\n\nmail.To.Add(\"\"); //收件者\n\nmail.CC.Add(\"\"); //副本\n\nmail.Subject=\"\";\n\nmail.IsBodyHtml = true;//要寫html在用true\n\nmail.Body =\"\";//內容\n\nmail.BodyEncoding = System.Text.Encoding.GetEncoding(\"utf-8\");//編碼\n\nSmtpClient mailer = new SmtpClient(\"郵件伺服器\");\n\nmailer.Credentials = new System.Net.NetworkCredential(\"帳號\", \"密碼\");\n\nmailer.Send(mail); //寄送信件\n\n```","tags":["C#"]},{"title":"C#連接SQL資料庫","url":"/2017/07/07/SQL/","content":"<hr>\n``` bash\npublic static string sqlserver = ConfigurationManager.ConnectionStrings[\"MyDB\"].ConnectionString;\n\nusing (SqlConn = new SqlConnection(sqlserver))\n        {\n            SqlConn.Open();//連接到SQL資料庫\n\n            sql = \"select \"; //查詢用語法\n\n            using (SqlCmd = new SqlCommand(sql, SqlConn))\n            {\n                using (Reader = SqlCmd.ExecuteReader())\n                {\n                  Reader.Read();//要先Read才有資料\n\n                  int test = Reader.GetInt32(0); //後面GET要跟撈出來的資料同個型態\n\n                  =============下面這邊不用先Reader.Read(); 就能將資料給GridView==========\n\n                    GridView1.DataSource = Reader;//設定GridView的資料來源\n\n                    GridView1.DataBind();\n                ============================================================\n                }\n            }\n       }\n\nusing (SqlConn = new SqlConnection(sqlserver))\n        {\n            SqlConn.Open();\n\n            using (SqlCmd = SqlConn.CreateCommand())\n        {\n\n             SqlCmd.CommandText = \"INSERT INTO\" //新增、更改資料、刪除資料都用這種寫\n\n                SqlCmd.ExecuteNonQuery(); //執行SQL語法\n\n        }\n\n    }\n```","tags":["SQL"]}]